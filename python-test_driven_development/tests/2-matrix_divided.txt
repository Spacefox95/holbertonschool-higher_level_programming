# Tests for matrix_divided function
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# Test Case 1: Divide all elements of a matrix
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Test Case 2: Divide all elements of a matrix including a string
>>> matrix_divided([[1, 2, 3],['a', 'b', 'c']], 3)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test Case 3: Divide all elements of a matrix with different rows
>>> matrix_divided([[1, 2, 3],[4, 5]], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test Case 4: Divide all elements of a matrix by a string
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# Test Case 5: Divide all elements of a matrix by a float
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 2.5)
[[0.4, 0.8, 1.2], [1.6, 2.0, 2.4]]

# Test Case 6: Divide all elements of a matrix by 0
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test Case 7: Divide an empty matrix
>>> matrix_divided([[],[]], 3)
[[], []]

# Test Case 8: Divide an empty list
>>> matrix_divided([], 3)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size